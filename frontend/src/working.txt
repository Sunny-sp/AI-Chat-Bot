
import React, { useState, useEffect } from 'react';

const App = () => {
  const [prompt, setPrompt] = useState('');
  const [loading, setLoading] = useState(false);
  const [chat, setChat] = useState([]);
  const [currentLine, setCurrentLine] = useState('');
  const [eventSource, setEventSource] = useState(null);

  useEffect(() => {
    return () => {
      if (eventSource) {
        eventSource.close();
      }
    };
  }, [eventSource]);

  const handleInputChange = (e) => {
    setPrompt(e.target.value);
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();

    // Return early if the prompt is empty
    if (!prompt.trim()) {
      return;
    }

    setLoading(true);

    if (eventSource) {
      eventSource.close();
    }

    const newEventSource = new EventSource(
      `http://localhost:7860/?prompt=${encodeURIComponent(prompt)}`
    );

    newEventSource.onmessage = (event) => {
      const message = JSON.parse(event.data); // Parse the JSON string here
      const { token, completed } = message;

      if (completed) {
        newEventSource.close();
        return;
      }

      setCurrentLine((prevLine) => prevLine + token); // Add the token to the current line
    };

    newEventSource.onerror = (error) => {
      console.error('Error fetching data:', error);
      newEventSource.close();
      setLoading(false);
    };

    setEventSource(newEventSource);
  };

  const handleStopStream = () => {
    if (eventSource) {
      eventSource.close();
      setLoading(false);

      // If there is any remaining content in the current line, add it to the chat history
      if (currentLine.trim() !== '') {
        setChat((prevChat) => [...prevChat, currentLine]);
      }

      setCurrentLine('');
    }
  };

  return (
    <div>
      <div style={{ lineHeight: '1.6' }}>
        {chat.map((line, index) => (
          <React.Fragment key={index}>
            <pre>{line.join('')}</pre>
          </React.Fragment>
        ))}
        {currentLine.length > 0 && (
          <React.Fragment>
            <pre>{currentLine}</pre>
          </React.Fragment>
        )}
      </div>
      <form onSubmit={handleFormSubmit}>
        <input type="text" value={prompt} onChange={handleInputChange} />
        <button type="submit">Send</button>
        <button type="button" onClick={handleStopStream}>Stop</button>
      </form>
      {loading && <div>Loading...</div>}
    </div>
  );
};

export default App;
